#!/usr/bin/env python
'''
Script to retrive an ID number from a roboteq controller.

This will return whatever value was set in the controller's memory using the
set_roboteq_id script. It is intended to be called from within a udev script.
'''
from __future__ import print_function
import sys
import time
import re
import argparse
import serial

def fail(user_message, scripting_message):
    global args
    ''' Exit on failure, printing messages to the screen.

    :param user_message: string with user readable message
    :param scripting_message: string that can be used as part
      of a device name (no spaces or special characters)
    '''
    if args.as_script:
        print(scripting_message)
    else:
        print(user_message)

    sys.exit(-1)

parser = argparse.ArgumentParser(description='Set ID number of roboteq controller')
parser.add_argument('port', help='serial device of roboteq controller')
parser.add_argument('--debug', action='store_true', help='show extra debugging output')
parser.add_argument('--as-script', action='store_true', help='set to true if'
  'this is being run by a script (e.g. udev) and needs to give output suitable'
  'for a device name')
args = parser.parse_args()

try:
    ser = serial.Serial(
        port=args.port,
        baudrate=115200,
        bytesize=8,
        parity='N',
        stopbits=1,
        xonxoff=False,
        timeout=0.1,
        )
except serial.SerialException:
    fail(
      'Failed to open serial port {}'.format(args.port),
      'failed_to_open_port',
      )

# CNOD isn't documented in the user manual... see
#  http://www.roboteq.com/index.php/forum/14-general-issues/29528972-giving-mdc1460-controllers-unique-address
query_str="~CNOD\r"
if args.debug:
    print('>> {}'.format(query_str))
ser.write(query_str)

responses = (str([ser.readall()]))
if args.debug:
    print('Responses: {}'.format(str([responses])))

var_matches = re.search('CNOD=([0-9]+)', responses)
if var_matches:
    idnum = int(var_matches.groups()[0])
    print('{}'.format(idnum))
else:
    fail(
      'Failed to get id. Try running with --debug for more info',
      'unable_to_get_id',
      )
