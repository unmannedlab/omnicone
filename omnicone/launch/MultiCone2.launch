<launch>

	<param  name="robot_description"
			command="$(find xacro)/xacro --inorder '$(find open_base)/xacro/main.urdf.xacro'" />

	<node name="driver_node_a" pkg="roboteq_python" type="roboteq_driver_node" output="screen">
		<rosparam command="load" file="$(find omnicone)/config/omnicone_a.yaml" />
	</node>

	<node name="driver_node_b" pkg="roboteq_python" type="roboteq_driver_node" output="screen">
		<rosparam command="load" file="$(find omnicone)/config/omnicone_b.yaml" />
	</node>

	<node name="kinematics_node" pkg="open_base" type="open_base_kinematics" output="screen"/>

	<node name="WaypointPublisher" pkg="omnicone" type="WaypointPublisher" output="screen"/>

	<node name="EKF" pkg="omnicone" type="ConeEKF" output="screen"/>

	<node name="KinematicController" pkg="omnicone" type="KinematicController" output="screen"/>

	<include file="$(find ubxtranslator)/launch/ubxtranslator.launch" />


    <node name="ConeStateManager" pkg="omnicone" type="ConeStateManager" output="screen">
        <rosparam command="load" file="$(find omnicone)/config/cone2.yaml" />
    </node>


    <node name="udp_sender_1" pkg="nimbro_topic_transport" type="udp_sender" output="screen">
		<param name="destination_addr" value="192.168.1.11" />
		<param name="destination_port" value="17002" />
		<rosparam command="load" file="$(find omnicone)/config/cone_topics.yaml" />
	</node>


	<node name="udp_receiver_0" pkg="nimbro_topic_transport" type="udp_receiver" output="screen">
		<param name="port" value="17000" />
	</node>

	<node name="udp_receiver_1" pkg="nimbro_topic_transport" type="udp_receiver" output="screen">
		<param name="port" value="17001" />
		<remap from="/ConeState" to="/recv/ConeState" />
	</node>

</launch>
