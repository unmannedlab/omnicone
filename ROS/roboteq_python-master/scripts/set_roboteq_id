#!/usr/bin/env python
'''
Script to save a user-provided ID number to a roboteq motor controller.

This is useful in conjunction with the get_roboteq_id script when writing udev
rules.  The ID number provides a way to tell controllers apart when there are
multiple of them connected to a single computer.

To understand the commands used in this script, reference the "Roboteq Advanced
Digital Motor Controllers User Manual"

Except for CNOD. CNOD isn't documented in the user manual... see
  http://www.roboteq.com/index.php/forum/14-general-issues/29528972-giving-mdc1460-controllers-unique-address
'''
import sys
import time
import re
import argparse
import serial

parser = argparse.ArgumentParser(
    description='Set ID number of roboteq controller')
parser.add_argument('port', help='serial device of roboteq controller')
parser.add_argument('idnum', type=int, help='ID number to set')
parser.add_argument('--debug', action='store_true',
  help='show extra debugging output')
args = parser.parse_args()

ser = serial.Serial(
    port=args.port,
    baudrate=115200,
    bytesize=8,
    parity='N',
    stopbits=1,
    xonxoff=False,
    timeout=0.1,
    )

# Store idnum on the controller using CNOD
print('Setting idnum for roboteq attached to {} to {}'.format(
  args.port, args.idnum))
query_str = u'^cnod {}\r'.format(args.idnum)
if args.debug:
    print('>> {}'.format(query_str))
ser.write(query_str)

# Save configuration to EEPROM. If we don't do this, then the value saved in
# CNOD will be lost any time the controller loses power.
print('Saving configuration to EEPROM')
query_str = u'!ees\r'
if args.debug:
    print('>> {}'.format(query_str))
ser.write(query_str)

# Read the value back to make sure that it worked.
query_str = u'~cnod\r'
if args.debug:
    print('>> {}'.format(query_str))
ser.write(query_str)

# Get responses for all commands we sent.
responses = (str([ser.readall()]))
if args.debug:
    print('Responses: {}'.format(str([responses])))

var_matches = re.search('CNOD=([0-9]+)', responses)
if var_matches:
    read_value = int(var_matches.groups()[0])
    if read_value != args.idnum:
        print('Failed to set id. Try running with --debug for more info')
        sys.exit(-1)
print('ID number set successfully')
